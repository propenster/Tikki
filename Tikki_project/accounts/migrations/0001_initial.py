# Generated by Django 3.1.2 on 2020-10-13 09:03

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('firstname', models.CharField(max_length=255, verbose_name='First Name')),
                ('lastname', models.CharField(max_length=255, verbose_name='First Name')),
                ('business_name', models.CharField(max_length=255, verbose_name='Business/Company Name')),
                ('phone_number', models.CharField(max_length=13, verbose_name='Phone Number')),
                ('email', models.CharField(max_length=255, unique=True, verbose_name='Email')),
                ('country', models.CharField(choices=[('', 'Select Country'), ('US', 'United States of America'), ('NG', 'Nigeria'), ('GB', 'Great Britain'), ('CN', 'China'), ('GH', 'Ghana'), ('KE', 'Kenya'), ('NL', 'The Netherlands'), ('IS', 'Israel')], max_length=100, verbose_name='Country')),
                ('state', models.CharField(max_length=255, verbose_name='State/Province')),
                ('city', models.CharField(max_length=150, verbose_name='City')),
                ('zipcode', models.CharField(max_length=10, verbose_name='Zip Code')),
                ('business_category', models.CharField(choices=[('', 'Select a category'), ('general', 'General'), ('contract', 'Contracting/Consultancy'), ('agriculture', 'Agriculture'), ('ecommerce', 'Ecommerce'), ('tech', 'Technology and IT'), ('consultancy', 'Consultancy'), ('ngo', 'Not-for-profit/NGO'), ('publishing', 'Writing and Publishing'), ('blogging', 'Blogging'), ('trading', 'Trading - Buying and Selling'), ('education', 'Education and EduTech'), ('adventure', 'Adventure'), ('travels', 'Travels and Tourism'), ('sports', 'Sports'), ('music', 'Music and Entertainment'), ('foodspitality', 'Food and Hospitality'), ('delivery', 'Delivery and Logistics'), ('freelancing', 'Freelancing'), ('adventure', 'Adventure'), ('aerospace', 'Aerospace and Aviation'), ('security', 'Security'), ('others', 'Others')], max_length=150, verbose_name='Business Category')),
                ('company_size', models.CharField(choices=[('', 'Select an option'), ('justme', 'Just Me'), ('lessthan10', '1-10'), ('less50', '11-50'), ('50less200', '51-200'), ('200less500', '201-500'), ('500less1000', '501-1000'), ('1kless5k', '1001-5,000'), ('5kless10k', '5001-10,000'), ('greaterthan10k', '10,000+')], max_length=150, verbose_name='Company Size')),
                ('datejoined', models.DateField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
